# C++ AOC Development Commands

# Show available commands
default:
    @just --list

# Build the solution
build:
    @if [ -f CMakeLists.txt ]; then \
        cmake -B build && cmake --build build; \
    elif [ -f Makefile ]; then \
        make; \
    else \
        g++ -std=c++20 -O2 -Wall *.cpp -o solution; \
    fi

# Run the solution
run:
    @if [ -f CMakeLists.txt ]; then \
        if [ ! -d "build" ]; then just build; fi; \
        ./build/hello-cpp; \
    elif [ -f solution ]; then \
        ./solution; \
    else \
        echo "No executable found - run 'just build' first"; \
    fi

# Run tests
test:
    @if [ -f CMakeLists.txt ]; then \
        cd build && ctest; \
    elif [ -f Makefile ]; then \
        make test; \
    else \
        echo "No test framework configured"; \
    fi

# Clean build artifacts
clean:
    @if [ -f CMakeLists.txt ]; then \
        rm -rf build; \
    elif [ -f Makefile ]; then \
        make clean; \
    else \
        rm -f solution *.o; \
    fi

# Lint code
lint:
    @if command -v clang-tidy >/dev/null 2>&1; then \
        clang-tidy *.cpp -- -std=c++20; \
    else \
        echo "clang-tidy not available"; \
    fi

# Format code
format:
    @if command -v clang-format >/dev/null 2>&1; then \
        clang-format -i *.cpp *.hpp; \
    else \
        echo "clang-format not available"; \
    fi
